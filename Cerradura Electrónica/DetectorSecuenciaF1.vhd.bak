library ieee;
use ieee.std_logic_1164.all;

entity DetectorSecuenciaF1 is
port(
	reset_n		:	in		std_logic;
	clk			:	in		std_logic;
	p1,p0			:	in		std_logic;
	s				:	out	std_logic);
end DetectorSecuenciaF1;

architecture behavioral of DetectorSecuenciaF1 is
	type t_estados is (Reposo, EP0, EP0EP1, EP0EP1EP1, EP0EP1EP1EP0);
	signal estado_act, estado_sig	:	t_estados;
	signal entradas	:	std_logic_vector(1 downto 0);
	
	component DetectorFlanco
		port(
			e			:	in		std_logic;
			reset_n	:	in		std_logic;
			clk		:	in		std_logic;
			s			:	out	std_logic);
	end component;
	
begin --behavioral	

	DetectorFlanco_1	:	DetectorFlanco
		port(
			e			=>	p1,
			reset_n	=>	reset_n,
			clk		=>	clk,
			s			=>	entradas(1));
			
	DetectorFlanco_2	:	DetectorFlanco
		port(
			e			=>	p0,
			reset_n	=>	reset_n,
			clk		=>	clk,
			s			=>	entradas(0));
			
	VarEstado	:	process(clk,reset_n,estado_sig)
		begin
			if reset_n = '0' then
				estado_act	<= Reposo;
			else if clk' event and clk = '0' then
				estado_act	<= estado_sig;
				end if;
			end if;
		end process VarEstado;
		
	TransicionEstados	:	process(estado_act,	entradas)
		begin
			estado_sig	<= estado_act;
			case estado_act is
				when Reposo =>
					if entradas = "10" then
						estado_act <= EP0;
					end if;
				when EP0 =>
					if entradas = "01" then
						estado_act <= EP0EP1;
					elseif entradas = "00" then
						estado_act <= Reposo;
					end if;
				when EP0EP1 =>
					if entradas = "01" then
						estado_sig <= EP0EP1EP1;
					elseif entradas = "10" then
						estados_sig <= EP0;
					elseif entradas = "00" then
						estado_sig <= Reposo;
					end if;
				when EP0EP1EP1 =>
					if entradas = "10" then
						estado_sig <= EP0EP1EP1EP0;
					elseif entradas = "00" then
						estado_sig <= Reposo;
					end if;
				when EP0EP1EP1EP0 =>
					if entradas = "00" then
						estado_act <= Reposo;
					elseif entradas = "01" then
						estado_sig <= EP0EP1;
					end if;
				when others =>
					estado_sig <= Reposo;
			end case;
		end process;
		
		s	<= '1' when estado_act = EP0EP1EP1EP0 else
			'0';
end behavioral;
					